---
import Layout from '../layouts/Layout.astro';
import NewsCard from '../components/NewsCard.astro';
import { sanityClient } from 'sanity:client';
import imageUrlBuilder from '@sanity/image-url';
import type { SanityImageSource } from '@sanity/image-url/lib/types/types';

interface Post {
  title: string;
  slug: { current: string };
  publishedAt: string;
  image?: SanityImageSource;
}

const query = Astro.url.searchParams.get('q');
let posts: Post[] = [];

if (query) {
  // Add asterisks around the query for wildcard matching
  const searchQuery = `*${query}*`;
  posts = await sanityClient.fetch<Post[]>(
    `*[_type == "post" && (title match $searchQuery || pt::text(body) match $searchQuery)] | order(publishedAt desc)`,
    { searchQuery }
  );
}

const builder = imageUrlBuilder(sanityClient);
function urlFor(source: SanityImageSource) {
	return builder.image(source);
}
---

<Layout title={`Search Results for "${query}"`}>
    <div class="max-w-3xl mx-auto">
        <h1 class="text-3xl font-bold mb-8">
            Search Results for <span class="text-blue-500">"{query}"</span>
        </h1>

        {posts.length > 0 ? (
            <div class="flex flex-col gap-4">
                {posts.map(article => (
                    <NewsCard
                        title={article.title}
                        time={new Date(article.publishedAt).toLocaleString([], {year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute:'2-digit'})}
                        imageUrl={article.image ? urlFor(article.image).width(300).url() : undefined}
                        slug={article.slug.current}
                    />
                ))}
            </div>
        ) : (
            <p>No articles found for your search.</p>
        )}
    </div>
</Layout>
