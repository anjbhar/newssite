---
// src/components/ThemeToggle.astro
---
<label for="theme-toggle" class="relative inline-flex items-center cursor-pointer">
    <input type="checkbox" id="theme-toggle" class="sr-only peer">
    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
</label>

<script>
    const themeToggle = document.getElementById('theme-toggle') as HTMLInputElement;

    const setTheme = (isDark) => {
        if (isDark) {
            document.documentElement.classList.add('dark');
            localStorage.setItem('theme', 'dark');
        } else {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('theme', 'light');
        }
    };

    // Set initial state of the toggle
    const savedTheme = localStorage.getItem('theme');
    const isDark = savedTheme ? savedTheme === 'dark' : true; // Default to dark
    themeToggle.checked = isDark;
    setTheme(isDark);

    themeToggle.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        setTheme(target.checked);
    });
</script>
